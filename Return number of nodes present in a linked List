#include<stdio.h>
#include<stdlib.h>

struct ListNode {
    int val;
    struct ListNode* next;
};

int countNodes(struct ListNode* head) {
    int count = 0;
    struct ListNode* current = head;
    // Traverse the linked list and count nodes
    while (current != NULL) {
        count++;
        current = current->next;
    }
    return count;
}

int main() {
    // Create the linked list nodes
    struct ListNode* head = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->val = 1;
    head->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->next->val = 2;
    head->next->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->next->next->val = 3;
    head->next->next->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->next->next->next->val = 5;
    head->next->next->next->next = (struct ListNode*)malloc(sizeof(struct ListNode));
    head->next->next->next->next->val = 8;
    head->next->next->next->next->next = NULL;
    
    // Count the nodes in the linked list
    int result = countNodes(head);
    printf("Number of nodes: %d\n", result);
    
    // Free the memory allocated for the linked list nodes
    struct ListNode* current = head;
    struct ListNode* next;
    while (current != NULL) {
        next = current->next;
        free(current);
        current = next;
    }
    
    return 0;
}
